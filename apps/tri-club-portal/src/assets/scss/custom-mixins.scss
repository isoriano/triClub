@import '~@angular/material/theming';

@mixin apply-theme($config-or-theme) {
  // Extract the color configuration in case a theme has been passed.
  // This allows consumers to either pass a theme object or a color configuration.
  $config: mat-get-color-config($config-or-theme);

  // Extract the palettes you need from the theme definition.
  $primary: map-get($config, primary);
  $accent: map-get($config, accent);
  $warn: map-get($config, warn);

  // Define any styles affected by the theme.
  .mat-form-field,
  .mat-checkbox-label,
  .mat-label {
    color: mat-contrast($primary, 500);
  }
  .tsc-sidenav-btn-container {
    border-color: mat-contrast($primary, 500);
    .mat-button-focus-overlay {
      background: mat-color($accent);
    }
    .tsc-nav-active {
      border-color: mat-color($accent) !important;
      .mat-button-focus-overlay {
        opacity: 0.1;
      }
    }
  }

  .tsc-error {
    background-color: mat-color($warn);
    color: #fff;
    padding: .5rem;
    border-radius: 5px;
  }

  .mat-snack-bar-container {
    background: mat-color($accent);
    color: mat-contrast($primary, 500);
    .mat-simple-snackbar-action {
      .mat-button {
        color: mat-contrast($primary, 500);
        background-color: mat-color($primary);
      }
    }
  }

  .tsc-sport-img {
    border-color: mat-color($primary, 200)!important;
    &.selected {
      border-color: mat-color($accent)!important;
    }
  }
}
